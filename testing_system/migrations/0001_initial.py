# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-04-08 06:51
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ps_index', models.SmallIntegerField()),
                ('question_index', models.SmallIntegerField()),
                ('stu_answer', models.TextField()),
                ('score', models.IntegerField()),
                ('time_consuming', models.IntegerField()),
                ('test_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(max_length=255)),
            ],
            options={
                'verbose_name': '答题卡',
                'verbose_name_plural': '答题卡',
            },
        ),
        migrations.CreateModel(
            name='ChoiceQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_type', models.SmallIntegerField(choices=[(0, 'single_choice'), (1, 'multiple_choices'), (2, 'true_or_false')])),
                ('question', models.CharField(max_length=64)),
                ('option_a', models.CharField(max_length=32)),
                ('option_b', models.CharField(max_length=32)),
                ('option_c', models.CharField(blank=True, max_length=32, null=True)),
                ('option_d', models.CharField(blank=True, max_length=32, null=True)),
                ('answer', models.CharField(max_length=8)),
                ('question_score', models.SmallIntegerField()),
            ],
            options={
                'verbose_name': '选择题',
                'verbose_name_plural': '选择题',
            },
        ),
        migrations.CreateModel(
            name='EssayQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=64)),
                ('answer', models.CharField(max_length=255)),
                ('question_score', models.SmallIntegerField()),
            ],
            options={
                'verbose_name': '问答题',
                'verbose_name_plural': '问答题',
            },
        ),
        migrations.CreateModel(
            name='GapFilling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=64)),
                ('gap_index', models.SmallIntegerField()),
                ('gap_amount', models.SmallIntegerField()),
                ('answer', models.CharField(max_length=8)),
                ('question_score', models.SmallIntegerField()),
            ],
            options={
                'verbose_name': '填空题',
                'verbose_name_plural': '填空题',
            },
        ),
        migrations.CreateModel(
            name='PaperStruct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('big_title', models.CharField(max_length=64)),
                ('question_index', models.SmallIntegerField()),
                ('question_type', models.SmallIntegerField(choices=[(0, 'choice_question'), (1, 'gap_filling'), (2, 'essay_question'), (3, 'writing_task')])),
            ],
            options={
                'verbose_name': '试卷结构',
                'verbose_name_plural': '试卷结构',
            },
        ),
        migrations.CreateModel(
            name='TestPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_topic', models.CharField(max_length=32)),
                ('total_score', models.IntegerField()),
                ('quiz_time', models.IntegerField()),
                ('enabled', models.BooleanField()),
                ('recorded_date', models.DateTimeField(auto_now_add=True)),
                ('paper_type', models.SmallIntegerField(choices=[(0, '教师资格证'), (1, '教育学'), (2, '心理学'), (3, '专业知识')], default=0)),
                ('memo', models.TextField(blank=True, null=True)),
                ('recorded', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '试卷',
                'verbose_name_plural': '试卷',
            },
        ),
        migrations.CreateModel(
            name='WritingTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=64)),
                ('question_score', models.SmallIntegerField()),
                ('ps_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing_system.PaperStruct')),
            ],
            options={
                'verbose_name': '问答题',
                'verbose_name_plural': '问答题',
            },
        ),
        migrations.AddField(
            model_name='paperstruct',
            name='paper_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing_system.TestPaper'),
        ),
        migrations.AddField(
            model_name='gapfilling',
            name='ps_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing_system.PaperStruct'),
        ),
        migrations.AddField(
            model_name='essayquestion',
            name='ps_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing_system.PaperStruct'),
        ),
        migrations.AddField(
            model_name='choicequestion',
            name='ps_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing_system.PaperStruct'),
        ),
        migrations.AddField(
            model_name='answerpaper',
            name='paper_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing_system.TestPaper'),
        ),
        migrations.AddField(
            model_name='answerpaper',
            name='stu_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
